{"mappings":"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","sources":["src/js/module-code.js","src/js/02-timer.js"],"sourcesContent":["export const getRandomHexColor = () => {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport function fromGoItConvertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\n\nexport function addLeadingZero(value) {\n    return String(value).padStart(2, '0')\n}\n\nexport function resetTimer(timerId, refs = {}) {\n    clearInterval(timerId);\n    //–Ü–Ω—ñ—Ü—ñ–∞—ñ–∑—É—î–º –ø–∞—Ä–º–µ—Ç—Ä —Ñ-—Ü—ñ—ó —ñ –ø—Ä–∏—Å–≤–æ—é—î–º–æ –π–æ–º—É –∑–Ω–∞—á–µ–Ω—è –æ–±—î–∫—Ç –∑–∞ –∑–∞–≤–º–æ–≤—á–µ–Ω–Ω—è–º\n    // –∞–±–æ –∑–∞–ø–∏—Å—É—î–º–æ –≤ —Ç—ñ–ª–æ —Ñ-—Ü—ñ—ó –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä\n    // const { days = 0, hours = 0, minutes = 0, seconds = 0 } = refs;\n    refs.seconds.textContent = '00';\n    refs.minutes.textContent = '00';\n    refs.hours.textContent = '00';\n    refs.days.textContent = '00';\n}\n\n\nexport function myConverterMs(ONE_SECOND = 1, date = new Date) {\n\n    let timeToGo = Math.floor((date.getTime() - Date.now()) / ONE_SECOND);\n    const totalMin = Math.floor(timeToGo / 60);\n    const totalHr = Math.floor(totalMin / 60);\n    const totalDays = Math.floor(totalHr / 24);\n\n    let ss = timeToGo - (totalMin * 60);\n    let mm = totalMin - (totalHr * 60);\n    let hh = totalHr - totalDays * 24;\n    let dd = totalDays;\n\n    return {\n        ss,\n        mm,\n        hh,\n        dd,\n        timeToGo,\n    }\n}\n\nexport function error(text, notifyId = 0) {\n\n\n    try {\n        if (document.querySelector('[data-mesage]').classList.contains('.error-block')) {\n            return\n        };\n        document.querySelector('.success-block').remove();\n    } catch (error) {\n\n    }\n    const htmlText = `<div class=\"error-block\" data-mesage><p class= \"error-message\">${text}</p></div>`;\n    document.body.insertAdjacentHTML(\"afterbegin\", htmlText);\n\n    notifyId = setTimeout(() => { document.querySelector('.error-block')?.remove() }, 3000);\n}\n\nexport function success(text, notifyId = 0) {\n\n    try {\n        if (document.querySelector('[data-mesage]').classList.contains('.success-block')) {\n            return\n        };\n        document.querySelector('.error-block').remove();\n    } catch (error) {\n\n    }\n\n    const htmlText = `<div class=\"success-block\" data-mesage><p class= \"success-message\">${text}</p></div>`;\n    document.body.insertAdjacentHTML(\"afterbegin\", htmlText);\n\n    notifyId = setTimeout(() => { document.querySelector('.success-block')?.remove() }, 3000);\n}","import { myConverterMs, addLeadingZero, resetTimer, error, success } from './module-code.js';\n\n// –ï–ª–µ–º–µ–Ω—Ç–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç—ñ\nconst inputDate = document.querySelector('input');\nconst start = document.querySelector('button');\n\nconst days = document.querySelector(\"[data-days]\");\nconst hours = document.querySelector(\"[data-hours]\");\nconst minutes = document.querySelector(\"[data-minutes]\");\nconst seconds = document.querySelector(\"[data-seconds]\");\n//–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏\nconst CURRENT_MS_FROM_1970 = Date.now();\nconst ONE_SECOND = 1000;\n// –ó–º—ñ–Ω–Ω—ñ\nlet isInFuture = false;\nlet date = null;\nlet notifyId = null;\n// –ü—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞—á—ñ –ø–æ–¥—ñ–π\ninputDate.addEventListener('input', handlerDate);\ninputDate.addEventListener('click', dateTimeLocal)\nstart.addEventListener('click', onClickStart);\n\n\n//–ó–Ω–∞—á–µ–Ω–Ω—è –≤ —ñ–Ω–ø—É—Ç—ñ –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞—Ö–æ–¥—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É\nlet timerInput = window.setInterval(() => {\n    let date = new Date();\n    // inputDate.value = date;\n    inputDate.value = `${date.getFullYear()}-0${date.getMonth() + 1}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}`;\n}, ONE_SECOND);\n//\nstart.disabled = true;\n\n\nfunction handlerDate(params) {\n    date = new Date(this.value);\n    const selectedTimeInMs = date.getTime();\n\n    if (selectedTimeInMs < CURRENT_MS_FROM_1970) {\n        error(\"Please choose a date in the future\", notifyId);\n        start.disabled = true;\n        return\n    }\n    success(\"GOOD!!! You are # 1 üòé\", notifyId);\n    start.disabled = false;\n}\n\nfunction onClickStart() {\n\n    if (inputDate.value <= CURRENT_MS_FROM_1970) {\n        return;\n    }\n\n    const idTimer = setInterval(() => {\n        let { ss, mm, hh, dd, timeToGo: ttg } = myConverterMs(ONE_SECOND, date);\n\n        seconds.textContent = addLeadingZero(ss);\n        minutes.textContent = addLeadingZero(mm);\n        hours.textContent = addLeadingZero(hh);\n        days.textContent = addLeadingZero(dd);\n\n        if (ttg === 0) {\n            clearTimeout(idTimer);\n        }\n    }, ONE_SECOND);\n\n}\n\nfunction dateTimeLocal() {\n    inputDate.type = \"datetime-local\";\n    clearInterval(timerInput);\n}\n"],"names":["$95fbbbfaf27ca6bf$export$b69ee541cb46e797","value","String","padStart","$95fbbbfaf27ca6bf$export$82c74fb4aef09e40","ONE_SECOND","arguments","length","date","Date","timeToGo","Math","floor","getTime","now","totalMin","totalHr","totalDays","ss","mm","hh","dd","$95fbbbfaf27ca6bf$export$a3bc9b8ed74fc","text","document","querySelector","classList","contains","remove","error","htmlText","concat","body","insertAdjacentHTML","setTimeout","ref","$95fbbbfaf27ca6bf$export$fe7c49d056ea1d88","$84b9dae4df53835d$var$inputDate","$84b9dae4df53835d$var$start","$84b9dae4df53835d$var$days","$84b9dae4df53835d$var$hours","$84b9dae4df53835d$var$minutes","$84b9dae4df53835d$var$seconds","$84b9dae4df53835d$var$CURRENT_MS_FROM_1970","$84b9dae4df53835d$var$ONE_SECOND","$84b9dae4df53835d$var$date","addEventListener","params","this","disabled","type","clearInterval","$84b9dae4df53835d$var$timerInput","idTimer","setInterval","ttg","textContent","clearTimeout","window","date1","getFullYear","getMonth","getDate","getHours","getMinutes"],"version":3,"file":"02-timer.6e49fbdb.js.map"}